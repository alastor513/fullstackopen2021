{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Developer\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 26\n}, this);\n\n_c = Display;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst Content = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.total]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 1\n}, this);\n\n_c3 = Content;\n\nconst All = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"all: \", props.good + props.neutral + props.bad]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c4 = All;\n\nconst Averange = props => {\n  let averange = useState[0];\n  let division = 0;\n  averange = props.good + props.neutral + props.bad;\n  division = (props.good - props.bad) / averange;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"averange: \", division]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = Averange;\n\nconst Positive = props => {\n  let averange = useState[0];\n  let division = 0;\n  averange = props.good + props.neutral + props.bad;\n  division = props.good / averange * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"positive: \", division]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = Positive;\n\nconst Statics = props => {\n  if (props.good.length === 0 && props.neutral.length === 0 && props.bad.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: \"statics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"good:\",\n      total: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"neutral:\",\n      total: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"bad:\",\n      total: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(All, {\n      good: props.good,\n      neutral: props.neutral,\n      bad: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Averange, {\n      good: props.good,\n      neutral: props.neutral,\n      bad: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Positive, {\n      good: props.good,\n      neutral: props.neutral,\n      bad: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Statics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c8 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"All\");\n$RefreshReg$(_c5, \"Averange\");\n$RefreshReg$(_c6, \"Positive\");\n$RefreshReg$(_c7, \"Statics\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["C:/Users/Developer/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","Content","name","total","All","good","neutral","bad","Averange","averange","division","Positive","Statics","length","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\n\nconst Display = props => <h1>{props.value}</h1>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n\n)\n\nconst Content =(props)=>(\n<div>{props.name} {props.total}</div>\n)\n\nconst All = (props)=>(\n  <div>all: {props.good + props.neutral + props.bad}</div>\n)\n\nconst Averange = (props)=>{\n  \n  let averange = useState[0]\n  let division = 0\n\n  averange = props.good + props.neutral + props.bad\n  division = ((props.good - props.bad)/averange)\n\nreturn(\n  <div> \n    averange: {division}\n  </div>\n)  \n}\nconst Positive = (props)=>{\n  \n  let averange = useState[0]\n  let division = 0\n\n  averange = props.good + props.neutral + props.bad\n  division = ((props.good/averange)*100)\n\nreturn(\n  <div> \n    positive: {division}\n  </div>\n)  \n}\nconst Statics =(props) =>{\n  if (props.good.length === 0 && props.neutral.length === 0 &&props.bad.length === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Display value={\"statics\"}></Display>\n      <Content name={\"good:\"}total={props.good}></Content>\n      <Content name={\"neutral:\"}total={props.neutral}></Content>\n      <Content name={\"bad:\"}total={props.bad}></Content>\n      <All good={props.good} neutral={props.neutral} bad={props.bad}></All>\n      <Averange good={props.good} neutral={props.neutral} bad={props.bad}></Averange>\n      <Positive good={props.good} neutral={props.neutral} bad={props.bad}></Positive>    \n  </div>\n  )\n}\n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  return (\n    <div>\n      <Display value={\"give feedback\"}></Display>\n      <Button handleClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"Bad\" />\n      <Statics good={good} neutral={neutral} bad={bad}></Statics>\n      \n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}