{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Developer\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 26\n}, this);\n\n_c = Display;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst Content = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.total]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 1\n}, this);\n\n_c3 = Content;\n\nconst All = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"all: \", props.good + props.neutral + props.bad]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c4 = All;\n\nconst Averange = props => {\n  let averange = useState[0];\n  let division = 0;\n  averange = props.good + props.neutral + props.bad;\n  division = (props.good - props.bad) / averange;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: division\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = Averange;\n\nconst Positive = props => {\n  let averange = useState[0];\n  let division = 0;\n  averange = props.good + props.neutral + props.bad;\n  division = props.good / averange * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: division\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = Positive;\n\nconst Statics = props => {\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: \"statics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"No feedback given\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Display, {\n        value: \"statics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Good: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Neutral: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Bad: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"All: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Averange: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Positive: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            total: props.good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            total: props.neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            total: props.bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(All, {\n            good: props.good,\n            neutral: props.neutral,\n            bad: props.bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Averange, {\n            good: props.good,\n            neutral: props.neutral,\n            bad: props.bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Positive, {\n            good: props.good,\n            neutral: props.neutral,\n            bad: props.bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_c7 = Statics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c8 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 110,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"All\");\n$RefreshReg$(_c5, \"Averange\");\n$RefreshReg$(_c6, \"Positive\");\n$RefreshReg$(_c7, \"Statics\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["C:/Users/Developer/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","Content","name","total","All","good","neutral","bad","Averange","averange","division","Positive","Statics","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\n\nconst Display = props => <h1>{props.value}</h1>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n\n)\n\nconst Content =(props)=>(\n<div>{props.name} {props.total}</div>\n)\n\nconst All = (props)=>(\n  <div>all: {props.good + props.neutral + props.bad}</div>\n)\n\nconst Averange = (props)=>{\n  \n  let averange = useState[0]\n  let division = 0\n\n  averange = props.good + props.neutral + props.bad\n  division = ((props.good - props.bad)/averange)\n\nreturn(\n  <div> \n   {division}\n  </div>\n)  \n}\nconst Positive = (props)=>{\n  \n  let averange = useState[0]\n  let division = 0\n\n  averange = props.good + props.neutral + props.bad\n  division = ((props.good/averange)*100)\n\nreturn(\n  <div> \n     {division}\n  </div>\n)  \n}\nconst Statics =(props) =>{\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return (\n      <div>\n        <Display value={\"statics\"}></Display>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n  <div>    \n    <div>\n      <Display value={\"statics\"}></Display>\n    </div>\n    <div>\n    <tr>\n      <td>Good: </td>\n      <td>Neutral: </td>\n      <td>Bad: </td>\n      <td>All: </td>\n      <td>Averange: </td>\n      <td>Positive: </td>\n    </tr>\n    <tr>\n      <td><Content total={props.good}></Content></td>\n      <td><Content total={props.neutral}></Content></td>\n      <td><Content total={props.bad}></Content></td>\n      <td><All good={props.good} neutral={props.neutral} bad={props.bad}></All></td>\n      <td><Averange good={props.good} neutral={props.neutral} bad={props.bad}></Averange></td>\n      <td><Positive good={props.good} neutral={props.neutral} bad={props.bad}></Positive></td>  \n    </tr>\n  </div>\n  </div>\n\n  )\n}\n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  return (\n    <div>\n      <Display value={\"give feedback\"}></Display>\n      <Button handleClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"Bad\" />\n      <Statics good={good} neutral={neutral} bad={bad}></Statics>\n      \n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}