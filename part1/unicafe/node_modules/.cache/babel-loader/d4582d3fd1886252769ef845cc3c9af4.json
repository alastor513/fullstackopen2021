{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Developer\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 26\n}, this);\n\n_c = Display;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst Content = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.total]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 1\n}, this);\n\n_c3 = Content;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const Total = props => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"all: \", setTotal(props.good + props.neutral + props.bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n\n    return console.log(total);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      value: \"statics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"good:\",\n      total: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"neutral:\",\n      total: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      name: \"bad:\",\n      total: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/Developer/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","Content","name","total","App","good","setGood","neutral","setNeutral","bad","setBad","setTotal","Total","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\n\nconst Display = props => <h1>{props.value}</h1>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n\n)\n\nconst Content =(props)=>(\n<div>{props.name} {props.total}</div>\n)\n\n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const Total = (props)=>{\n\n  \n    <div>all: {setTotal(props.good + props.neutral + props.bad)}</div>\n    return(\n      console.log(total)\n    )\n    }\n  \n  return (\n    <div>\n      <Display value={\"give feedback\"}></Display>\n      <Button handleClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"Bad\" />\n      <Display value={\"statics\"}></Display>\n      <Content name={\"good:\"}total={good}></Content>\n      <Content name={\"neutral:\"}total={neutral}></Content>\n      <Content name={\"bad:\"}total={bad}></Content>\n      <Total good={good} neutral={neutral} bad={bad}></Total>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}